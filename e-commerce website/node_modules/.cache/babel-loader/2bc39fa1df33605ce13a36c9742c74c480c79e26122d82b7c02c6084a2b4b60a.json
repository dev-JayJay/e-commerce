{"ast":null,"code":"import React from 'react';\nimport { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cartSlice',\n  initialState: {\n    cart: []\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const cartItem = state.cart.find(item => item.id == action.payload);\n      if (cartItem) {\n        cartItem.quantity += 1;\n        return;\n      }\n      state.cart.push({\n        quantity: 1,\n        id: action.payload\n      });\n    },\n    removeFromCart: (state, action) => {\n      const cartItem = state.cart.find(item => item.id == action.payload);\n      if (cartItem) {\n        cartItem.quantity -= 1;\n        if (cartItem.quantity == 0) {\n          state.cart = state.cart.filter(item => item.id != action.payload);\n        }\n      }\n    }\n  }\n});\n//structure\n// {\n//     quantity: 12,\n//         id: 123\n// }\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["React","createSlice","cartSlice","name","initialState","cart","reducers","addToCart","state","action","cartItem","find","item","id","payload","quantity","push","removeFromCart","filter","actions","reducer"],"sources":["C:/Users/Jay Jay/Documents/GitHub/e-commerce-website/e-commerce website/src/redux/slices/cartSlice.js"],"sourcesContent":["import React from 'react'\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nconst cartSlice = createSlice({\r\n    name: 'cartSlice',\r\n    initialState: {\r\n        cart: []\r\n    },\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const cartItem = state.cart.find(item => item.id == action.payload)\r\n            if (cartItem) {\r\n                cartItem.quantity += 1;\r\n                return;\r\n            }\r\n            state.cart.push({\r\n                quantity: 1,\r\n                id: action.payload\r\n            })\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            const cartItem = state.cart.find(item => item.id == action.payload)\r\n            if (cartItem) {\r\n                cartItem.quantity -= 1;\r\n                if (cartItem.quantity == 0) {\r\n                    state.cart = state.cart.filter(item => item.id != action.payload)\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n//structure\r\n// {\r\n//     quantity: 12,\r\n//         id: 123\r\n// }\r\nexport const { addToCart, removeFromCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,QAAQ,GAAGF,KAAK,CAACH,IAAI,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAAC;MACnE,IAAIJ,QAAQ,EAAE;QACVA,QAAQ,CAACK,QAAQ,IAAI,CAAC;QACtB;MACJ;MACAP,KAAK,CAACH,IAAI,CAACW,IAAI,CAAC;QACZD,QAAQ,EAAE,CAAC;QACXF,EAAE,EAAEJ,MAAM,CAACK;MACf,CAAC,CAAC;IACN,CAAC;IACDG,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMC,QAAQ,GAAGF,KAAK,CAACH,IAAI,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAAC;MACnE,IAAIJ,QAAQ,EAAE;QACVA,QAAQ,CAACK,QAAQ,IAAI,CAAC;QACtB,IAAIL,QAAQ,CAACK,QAAQ,IAAI,CAAC,EAAE;UACxBP,KAAK,CAACH,IAAI,GAAGG,KAAK,CAACH,IAAI,CAACa,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAAC;QACrE;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAM;EAAEP,SAAS;EAAEU;AAAe,CAAC,GAAGf,SAAS,CAACiB,OAAO;AAC9D,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}